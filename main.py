from aiogram import Bot, Dispatcher, Router
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo, Message
from aiogram.utils.keyboard import ReplyKeyboardBuilder, ReplyKeyboardMarkup, KeyboardButton
import asyncio
#from create_bot import bot, dp #–ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –±–æ—Ç–∞
#from handlers.start import start_router

TOKEN = '7946703986:AAHftunfdRkOy5zN2UrM-wxi2EUeZRNfrB4'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
bot = Bot(TOKEN)
dp = Dispatcher()
start_router = Router()


form_stage = "start"

model = ""
photos = []
memory = ""
battery = ""
price = ""
condition = ""
username = ""
city = ""
details = ""

@start_router.message(Command('start'))
async def command_start(message: Message):
    global form_stage
    form_stage = "start"
    await message.answer(
        """*üëã –ü—Ä–∏–≤–µ—Ç! üëã*\n
*–•–æ—á–µ—à—å –ø—Ä–æ–¥–∞—Ç—å —Å–≤–æ–π iPhone? –û—Ç–ª–∏—á–Ω–æ!*\n
*–ó–∞–ø–æ–ª–Ω–∏ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤* [–∫–∞–Ω–∞–ª–µ](https://t.me/tradeapplepromax).\n
*–ì–∞—Ä–∞–Ω—Ç/–º–µ–Ω–µ–¥–∂–µ—Ä: @mgmttradeapple üõ°*\n
üëá *–ù–∞—á–Ω–∏ —Å –º–æ–¥–µ–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:*""", disable_web_page_preview=True, parse_mode='MarkDown')

@start_router.message()
async def command_process_message(message: Message):
    global form_stage, model, memory, battery, photos, price, condition, username, city, details

    if form_stage == "start":
        model = message.text
        form_stage = "memory"
        await message.answer("*üëå –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —Å–∫–∞–∂–∏, —Å–∫–æ–ª—å–∫–æ –ø–∞–º—è—Ç–∏ —É —Ç–µ–ª–µ—Ñ–æ–Ω–∞?*", parse_mode='MarkDown')

    elif form_stage == "memory":
        memory = message.text
        form_stage = "battery"
        await message.answer("*üîã –ê –∫–∞–∫ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞?*", parse_mode='MarkDown')

    elif form_stage == "battery":
        battery = message.text
        form_stage = "photos"
        await message.answer("*üì∏ –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞*", parse_mode='MarkDown')

    elif form_stage == "photos":
        if message.photo:
            photos.append(message.photo[-1].file_id)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (—Å–∞–º—É—é –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—É—é)
            form_stage = "price"
            await message.answer("*üí∞ –ö–∞–∫–∞—è —Ü–µ–Ω–∞?*", parse_mode='Markdown')
        else:
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ")

    elif form_stage == "price":
        price = message.text
        form_stage = "condition"
        await message.answer("*üîç –í–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞*", parse_mode='MarkDown')

    elif form_stage == "condition":
        condition = message.text
        form_stage = "username"
        await message.answer("*üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à —é–∑–µ—Ä–Ω–µ–π–º –≤ Telegram*", parse_mode='MarkDown')

    elif form_stage == "username":
        username = message.text
        form_stage = "city"
        await message.answer("*üèô –í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å?*", parse_mode='MarkDown')

    elif form_stage == "city":
        city = message.text
        form_stage = "details"
        await message.answer("""*üìã –ï—Å—Ç—å –ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω—é–∞–Ω—Å—ã?*\n
(–∫–æ–º–ø–ª–µ–∫—Ç, –≤—Å–∫—Ä—ã–≤–∞–ª—Å—è –ª–∏)""", parse_mode='MarkDown')

    elif form_stage == "details":
        details = message.text
        await message.answer("""*–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞! ü§ù*\n
*–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ - /start*""", parse_mode='MarkDown')

        chats_id = ['1797047165', '7213857743', '1090086980']
        try:
            for chat_id in chats_id:
              # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—è–≤–∫–µ
              await bot.send_message(
                  chat_id,
                  text=f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n"
                  f"–ú–æ–¥–µ–ª—å: {model}\n"
                  f"–ü–∞–º—è—Ç—å: {memory}\n"
                  f"–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä: {battery}\n"
                  f"–¶–µ–Ω–∞: {price}\n"
                  f"–°–æ—Å—Ç–æ—è–Ω–∏–µ: {condition}\n"
                  f"–Æ–∑–µ—Ä–Ω–µ–π–º: {username}\n"
                  f"–ì–æ—Ä–æ–¥: {city}\n"
                  f"–ù—é–∞–Ω—Å—ã: {details}"
              )
              # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
              for photo_id in photos:
                  await bot.send_photo(chat_id, photo_id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def main():
    dp.include_router(start_router)
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())